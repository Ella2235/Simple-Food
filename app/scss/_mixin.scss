@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

$breakpoints: (
  "phone": 560px,
  "tablet": 768px,
  "tablet-2": 992px,
  "desktop": 1230px,
  "landscape": 992px,
);

@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// @mixin mq($height, $type: max) {
//   @if map_has_key($breakpoints, $height) {
//     $height: map_get($breakpoints, $height);
//     @if $type == max {
//       $height: $height - 1px;
//     }
//     @media only screen and (#{$type}-height: $height) {
//       @content;
//     }
//   }
// }

@mixin line-clamp($lines: 1) {
  @if $lines <=1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin burger {
  width: $burgerWidth;
  height: $burgerHeight;
  position: relative;
  color: $burgerColor;

  &__line {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    height: $burgerLineHeight;
    background-color: currentColor;
    transition: transform 0.3s ease-in-out;
  }

  &::before,
  &::after {
    content: "";
    position: absolute;
    left: 0;
    width: 100%;
    height: $burgerLineHeight;
    background-color: currentColor;
    transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
  }

  &::before {
    top: 0;
  }

  &::after {
    top: calc(100% - $burgerLineHeight);
  }
}
